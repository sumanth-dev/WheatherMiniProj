<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Weather App - by Raju Webdev</title>
    <link rel="icon" type="image/x-icon" href="/Images/favicon.png">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.2/css/all.min.css" integrity="sha512-1sCRPdkRXhBV2PBLUdRb4tMg1w2YPf37qatUFeS7zlBy7jJI8Lf4VHwWfZZfpXtYSLy85pkm9GaYVYMfw5BC1A==" crossorigin="anonymous" referrerpolicy="no-referrer" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@500&display=swap" rel="stylesheet">
    <style>
        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        body {
            width: 100%;
            height: 100vh;
            display: flex;
            justify-content: center;
            align-items: center;
            background-color: #66e3e2;
        }

        .weatherContainer {
            margin: 2rem;
            padding: 2rem 1rem;
            border-radius: 1rem;
            display: flex;
            justify-content: center;
            align-items: center;
            flex-direction: column;
            box-shadow: 0px 0px 19px 0px #18bd9e;
        }

        .outer_resultResult {
            text-align: center;
        }

        #weatherForm input {
            border: none;
            color: black;
            outline: none;
            font-size: 1rem;
            font-family: sans-serif;
            background: transparent;
        }

        #weatherImage {
            background-size: cover;
            height: 200px;
            width: 200px;
        }

        #weatherForm ul li {
            list-style: none;
        }

        .searchBtn {
            background: transparent;
            border: none;
        }

        .searchBtn ul li {
            list-style: none;
            font-size: 1.2rem;
        }

        #weatherForm {
            display: flex;
            justify-content: space-around;
        }

        .appHeading {
            text-align: center;
            margin-bottom: 1rem;
            font-family: 'Poppins', sans-serif;
        }

        #city {
            text-transform: capitalize;
            text-align: center;
            margin-top: 1rem;
            font-family: 'Poppins', sans-serif;
        }

        .weatherContainer img {
            width: 50%;
        }

        #temp {
            word-spacing: -8px;
            font-size: 2.5rem;
            margin-bottom: 1rem;
            font-family: 'Poppins', sans-serif;
        }

        #temp sup {
            font-size: 1.5rem;
        }

        .weatherMain {
            font-family: sans-serif;
        }

        #todayTime,
        .todayDates {
            font-family: sans-serif;
            line-height: 2rem;
        }

        /* Utility Classes */
        .d-flex {
            display: flex;
        }

        .justify-space-around {
            justify-content: space-around;
        }

        .justify-space-center {
            justify-content: center;
        }

        .align-items-center {
            align-items: center;
        }

        .f-col {
            flex-direction: column;
        }

        /* Media Query for Responsive */
        @media screen and (max-width: 307px) {
            #weatherForm {
                flex-direction: column;
            }

            #weatherForm input {
                text-align: center;
                margin-bottom: 1rem;
            }
        }
    </style>
</head>
<body>
    <!-- Main Container for the weather web app -->
    <div class="weatherContainer">
        <h2 class="appHeading"> Weather & Climate </h2>
        <!-- Input Division for city name -->
        <div class="search">
            <form action="" id="weatherForm">
                <input type="text" name="" id="weatherInput" placeholder="Enter your city here...">
                <button class="searchBtn" type="submit">
                    <ul>
                        <li><i class="fa-solid fa-magnifying-glass"></i></li>
                    </ul>
                </button>
            </form>
        </div>
        <!-- Output Will show on the screen -->
        <div class="outer_resultResult">
            <h2 id="city"></h2>
            <img src="" alt="" id="weatherImage">
            <p class="weatherMain" id="weatherMain"></p>
            <h2 id="temp"><span class="temp"></span></h2>
            <div class="todayDates"></div>
            <div id="todayTime"></div>
        </div>
    </div>
</body>
<script>
    const cityName = document.querySelector('#weatherInput');
    const form = document.getElementById('weatherForm');
    const myCity = document.getElementById('city');
    const image = document.getElementById('weatherImage');
    const weather = document.getElementById('weatherMain');
    const temp = document.querySelector('.temp');
    const dates = document.querySelector('.todayDates');
    const times = document.getElementById('todayTime');
    let date = new Date();

    // Function work when user input the city name
    form.addEventListener('submit', function (e) {
        // preventDefault() to stop page reload
        e.preventDefault();

        // Updating the city name
        let city = cityName.value;
        const myWeatherContainer = document.querySelector('.weatherContainer');
        const apiID = `931f131dde3f4ae2fcbc3289fc646471`;
        // API URL
        let url = `https://api.openweathermap.org/data/2.5/weather?q=${city}&units=metric&appid=${apiID}`;

        // fetching data from the weather api
        fetch(url).then((response) => {
            return response.json();
        }).then((data) => {
            if (data.cod !== 200) {
                alert("City not found");
                return;
            }
            const tempValue = Math.round(data['main']['temp']);
            const weatherMain = data['weather'][0]['main'];

            // Updating the DOM
            myCity.innerHTML = city;
            temp.innerHTML = `${tempValue}<sup>o</sup>C`;
            weather.innerHTML = weatherMain;

            // Updating the Images according to the weather
            if (weatherMain === 'Clear') {
                image.src = `https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ3iLZMPixf1cBgnFixAWjz7EXTMTkQHJcFPg&s`;
                myWeatherContainer.style.backgroundColor = '#ec6e4c';
            } else if (weatherMain === 'Clouds') {
                image.src = `https://cdn.icon-icons.com/icons2/517/PNG/512/cloud_weathe_sun_icon-icons.com_51096.png`;
                myWeatherContainer.style.backgroundColor = '#86d3d3';
            } else if (weatherMain === 'Rain') {
                image.src = `https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcRB4R2l09FV_e2uEE44jkq36ixdVk5Bz2gilg&s`;
                myWeatherContainer.style.backgroundColor = '#494bcf';
            } else if (weatherMain === 'Drizzle') {
                image.src = `https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcT1KF_H6mhIvTm-T5EV_8vjwzgGRMuE3R9GGQ&s`;
                myWeatherContainer.style.backgroundColor = '#8ecfcf';
            } else if (weatherMain === 'Haze') {
                image.src = `https://encrypted-tbn0.gstatic.com/images?q=tbn:ANd9GcQ0RzOAV9N-aj7tQ2EGpNTjlEEd7jQfSIxttQ&s`;
                myWeatherContainer.style.backgroundColor = '#d8ced2';
            }

            // Updating dates
            const currentMonth = date.getMonth();
            const months = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sept.", "Oct.", "Nov", "Dec"];
            dates.innerHTML = `${date.getDate()}, ${months[currentMonth]}`;

            // Updating times       
            function leftInterval() {
                const left = document.getElementById('todayTime');
                let leftDate = new Date();
                let hours = leftDate.getHours();
                let minutes = leftDate.getMinutes();
                let seconds = leftDate.getSeconds();

                if (hours === 0) {
                    hours = 12;
                }

                if (hours > 12) {
                    hours = hours - 12;
                }
                left.innerHTML = `${hours}h: ${minutes}m: ${seconds}s`;
            }
            setInterval(leftInterval, 1000);
        }).catch((error) => {
            console.error('Error fetching data:', error);
        });
    });
</script>
</html>
